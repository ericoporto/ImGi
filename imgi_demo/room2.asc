// room script file
bool can_go_next_room;
CheckBoxState* chkbox_Clicable, chkbox_MLTA;
ImGi_Int* myIntX, myIntY;

function room_RepExec()
{
  if(chkbox_Clicable == null) chkbox_Clicable = new CheckBoxState;
  if(chkbox_MLTA == null) chkbox_MLTA = new CheckBoxState;
  if(myIntX==null) myIntX = new ImGi_Int;
  if(myIntY==null) myIntY = new ImGi_Int;
    
  chkbox_Clicable.state = player.Clickable;
  chkbox_MLTA.state = player.MovementLinkedToAnimation;
  myIntX.value = player.x;
  myIntY.value = player.y;
  
  ImGi.Begin(); 
    
  if(ImGi.BeginWindow("My  Config  Window", 32, 32, 170, 60, eImGi_Opt_AlignCenter | 
                                                           eImGi_Opt_NoClose |
                                                           eImGi_Opt_NoResize |
                                                           eImGi_Opt_AutoSize))
  {

    int rows[];
        
    rows = new int[1];
    rows[0] = 166;
    ImGi.LayoutRow(1, rows);
    
    ImGi.Text("ImGi  can  be  used  to  build  in-game  debug  tools.\n");
    
    if(can_go_next_room){
      if(ImGi.Button("Go  to  next  room!")) player.ChangeRoom(3, 72, 143, eDirectionDown);
    }
    
    ImGi.Text("Configure  your  player  character  in  real  time!");
        
    ImGi.CheckBox("Clickable",chkbox_Clicable);
    ImGi.CheckBox("Anti-Glide",chkbox_MLTA);
    
    rows = new int[2];
    rows[0] = 83;
    rows[1] = 83;
    ImGi.LayoutRow(2, rows);
    
    ImGi.SliderI("player.X", myIntX, 0, 320, 1);
    ImGi.SliderI("player.Y", myIntY, 0, 200, 1);
    
    rows = new int[1];
    rows[0] = 166;
    ImGi.LayoutRow(1, rows);
    
    player.Clickable = chkbox_Clicable.state;
    player.MovementLinkedToAnimation = chkbox_MLTA.state;
    player.x = myIntX.value;
    player.y = myIntY.value;
    
    if(ImGi.Button("Place  on  Walkable  Area"))
    {
      player.PlaceOnWalkableArea();
      can_go_next_room = true;
    }          
  
    ImGi.EndWindow();
  }
    
  ImGi.End();  
}


function hGlowingOrb_AnyClick()
{

}
